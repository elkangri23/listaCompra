{
  "info": {
    "name": "Lista Compra API",
    "description": "Colección completa de endpoints para la API de Lista de la Compra Colaborativa - 48 endpoints organizados en 11 categorías (incluye CU-27: Security Testing, CU-29: Categorización Masiva, CU-32: Listas por Ocasión, CU-33: Recomendaciones IA)",
    "version": "1.4.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api/v1",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "listId",
      "value": "",
      "type": "string"
    },
    {
      "key": "productId",
      "value": "",
      "type": "string"
    },
    {
      "key": "categoryId",
      "value": "",
      "type": "string"
    },
    {
      "key": "storeId",
      "value": "",
      "type": "string"
    },
    {
      "key": "invitationHash",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "01. Autenticación",
      "item": [
        {
          "name": "Registrar Usuario",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"usuario@ejemplo.com\",\n  \"password\": \"MiPassword123!\",\n  \"nombre\": \"Juan\",\n  \"apellidos\": \"Pérez García\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Registra un nuevo usuario en el sistema. La contraseña debe tener al menos 8 caracteres, 1 mayúscula, 1 minúscula y 1 número."
          },
          "response": []
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.tokens) {",
                  "        pm.collectionVariables.set('token', response.data.tokens.accessToken);",
                  "        pm.collectionVariables.set('userId', response.data.user.id);",
                  "        console.log('Token de acceso guardado:', response.data.tokens.accessToken);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"usuario@ejemplo.com\",\n  \"password\": \"MiPassword123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Autentica un usuario y devuelve tokens de acceso. El token se guarda automáticamente en las variables de colección."
          },
          "response": []
        },
        {
          "name": "Obtener Perfil Usuario",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "me"]
            },
            "description": "Obtiene la información del usuario autenticado actual."
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"refresh_token_aqui\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "refresh"]
            },
            "description": "Renueva un token de acceso usando el refresh token. (Pendiente de implementar)"
          },
          "response": []
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout"]
            },
            "description": "Cierra la sesión del usuario actual."
          },
          "response": []
        }
      ]
    },
    {
      "name": "02. Listas de Compra",
      "item": [
        {
          "name": "Crear Lista",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.id) {",
                  "        pm.collectionVariables.set('listId', response.data.id);",
                  "        console.log('ID de lista guardado:', response.data.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"Lista de la compra semanal\",\n  \"descripcion\": \"Compras para la semana del 28 de octubre\",\n  \"tiendaId\": \"{{storeId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/lists",
              "host": ["{{baseUrl}}"],
              "path": ["lists"]
            },
            "description": "Crea una nueva lista de compra. Opcionalmente se puede asociar a una tienda específica."
          },
          "response": []
        },
        {
          "name": "Obtener Mis Listas",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/lists?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["lists"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Obtiene todas las listas del usuario autenticado con paginación."
          },
          "response": []
        },
        {
          "name": "Obtener Lista por ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/lists/{{listId}}",
              "host": ["{{baseUrl}}"],
              "path": ["lists", "{{listId}}"]
            },
            "description": "Obtiene los detalles de una lista específica por su ID."
          },
          "response": []
        },
        {
          "name": "Actualizar Lista",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"Lista de la compra semanal - Actualizada\",\n  \"descripcion\": \"Lista actualizada para incluir productos extra\",\n  \"tiendaId\": \"{{storeId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/lists/{{listId}}",
              "host": ["{{baseUrl}}"],
              "path": ["lists", "{{listId}}"]
            },
            "description": "Actualiza los datos de una lista existente. Solo el propietario puede hacerlo."
          },
          "response": []
        },
        {
          "name": "Eliminar Lista",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/lists/{{listId}}",
              "host": ["{{baseUrl}}"],
              "path": ["lists", "{{listId}}"]
            },
            "description": "Elimina permanentemente una lista y todos sus productos. Solo el propietario puede hacerlo."
          },
          "response": []
        }
      ]
    },
    {
      "name": "03. Productos",
      "item": [
        {
          "name": "Agregar Producto a Lista",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.id) {",
                  "        pm.collectionVariables.set('productId', response.data.id);",
                  "        console.log('ID de producto guardado:', response.data.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"Manzanas Fuji\",\n  \"descripcion\": \"Manzanas frescas para la semana\",\n  \"cantidad\": 2,\n  \"unidad\": \"kg\",\n  \"precio\": 3.50,\n  \"urgente\": false,\n  \"categoriaId\": \"{{categoryId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/lists/{{listId}}/products",
              "host": ["{{baseUrl}}"],
              "path": ["lists", "{{listId}}", "products"]
            },
            "description": "Agrega un nuevo producto a una lista específica."
          },
          "response": []
        },
        {
          "name": "Obtener Productos de Lista",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/lists/{{listId}}/products?comprado=false&page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["lists", "{{listId}}", "products"],
              "query": [
                {
                  "key": "comprado",
                  "value": "false",
                  "description": "Filtrar por estado de comprado"
                },
                {
                  "key": "urgente",
                  "value": "true",
                  "disabled": true
                },
                {
                  "key": "categoriaId",
                  "value": "{{categoryId}}",
                  "disabled": true
                },
                {
                  "key": "busqueda",
                  "value": "manzana",
                  "disabled": true
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            },
            "description": "Obtiene todos los productos de una lista con filtros opcionales."
          },
          "response": []
        },
        {
          "name": "Marcar Producto como Comprado",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"comprado\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/lists/{{listId}}/products/{{productId}}/purchased",
              "host": ["{{baseUrl}}"],
              "path": ["lists", "{{listId}}", "products", "{{productId}}", "purchased"]
            },
            "description": "Marca o desmarca un producto como comprado."
          },
          "response": []
        },
        {
          "name": "Actualizar Producto",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"Manzanas Golden - Actualizado\",\n  \"descripcion\": \"Manzanas golden en lugar de fuji\",\n  \"cantidad\": 3,\n  \"unidad\": \"kg\",\n  \"precio\": 2.80,\n  \"urgente\": true,\n  \"categoriaId\": \"{{categoryId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/lists/{{listId}}/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["lists", "{{listId}}", "products", "{{productId}}"]
            },
            "description": "Actualiza la información de un producto existente."
          },
          "response": []
        },
        {
          "name": "Eliminar Producto",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/lists/{{listId}}/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["lists", "{{listId}}", "products", "{{productId}}"]
            },
            "description": "Elimina un producto de la lista permanentemente."
          },
          "response": []
        }
      ]
    },
    {
      "name": "04. Categorías",
      "item": [
        {
          "name": "Crear Categoría",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.id) {",
                  "        pm.collectionVariables.set('categoryId', response.data.id);",
                  "        console.log('ID de categoría guardado:', response.data.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"Frutas y Verduras\",\n  \"descripcion\": \"Productos frescos del huerto\",\n  \"color\": \"#4CAF50\",\n  \"icono\": \"🍎\",\n  \"tiendaId\": \"{{storeId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/categories",
              "host": ["{{baseUrl}}"],
              "path": ["categories"]
            },
            "description": "Crea una nueva categoría personalizada para organizar productos."
          },
          "response": []
        },
        {
          "name": "Obtener Categorías por Tienda",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/categories?tiendaId={{storeId}}&activas=true",
              "host": ["{{baseUrl}}"],
              "path": ["categories"],
              "query": [
                {
                  "key": "tiendaId",
                  "value": "{{storeId}}"
                },
                {
                  "key": "activas",
                  "value": "true"
                }
              ]
            },
            "description": "Obtiene todas las categorías disponibles para una tienda específica."
          },
          "response": []
        },
        {
          "name": "Actualizar Categoría",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"Frutas y Verduras Frescas\",\n  \"descripcion\": \"Productos frescos y ecológicos\",\n  \"color\": \"#8BC34A\",\n  \"icono\": \"🥕\",\n  \"activa\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["categories", "{{categoryId}}"]
            },
            "description": "Actualiza una categoría existente. Solo el creador puede hacerlo."
          },
          "response": []
        },
        {
          "name": "Eliminar Categoría",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["categories", "{{categoryId}}"]
            },
            "description": "Elimina una categoría. No se puede eliminar si tiene productos asociados."
          },
          "response": []
        }
      ]
    },
    {
      "name": "05. Tiendas",
      "item": [
        {
          "name": "Crear Tienda",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.id) {",
                  "        pm.collectionVariables.set('storeId', response.data.id);",
                  "        console.log('ID de tienda guardado:', response.data.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"Mercadona Centro\",\n  \"direccion\": \"Calle Principal 123, Madrid\",\n  \"telefono\": \"+34 912 345 678\",\n  \"sitioWeb\": \"https://mercadona.es\",\n  \"tipo\": \"supermercado\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/stores",
              "host": ["{{baseUrl}}"],
              "path": ["stores"]
            },
            "description": "Crea una nueva tienda en el sistema."
          },
          "response": []
        },
        {
          "name": "Obtener Todas las Tiendas",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/stores?page=1&limit=20&activas=true",
              "host": ["{{baseUrl}}"],
              "path": ["stores"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "tipo",
                  "value": "supermercado",
                  "disabled": true
                },
                {
                  "key": "activas",
                  "value": "true"
                },
                {
                  "key": "search",
                  "value": "mercadona",
                  "disabled": true
                }
              ]
            },
            "description": "Obtiene la lista de todas las tiendas disponibles con filtros opcionales."
          },
          "response": []
        },
        {
          "name": "Obtener Tienda por ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/stores/{{storeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["stores", "{{storeId}}"]
            },
            "description": "Obtiene los detalles de una tienda específica."
          },
          "response": []
        },
        {
          "name": "Actualizar Tienda",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"Mercadona Centro - Renovado\",\n  \"direccion\": \"Calle Principal 123, Madrid (entrada renovada)\",\n  \"telefono\": \"+34 912 345 679\",\n  \"sitioWeb\": \"https://mercadona.es\",\n  \"tipo\": \"supermercado\",\n  \"activa\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/stores/{{storeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["stores", "{{storeId}}"]
            },
            "description": "Actualiza la información de una tienda existente."
          },
          "response": []
        },
        {
          "name": "Eliminar Tienda",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/stores/{{storeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["stores", "{{storeId}}"]
            },
            "description": "Elimina una tienda del sistema."
          },
          "response": []
        }
      ]
    },
    {
      "name": "06. Invitaciones",
      "item": [
        {
          "name": "Compartir Lista",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.hash) {",
                  "        pm.collectionVariables.set('invitationHash', response.data.hash);",
                  "        console.log('Hash de invitación guardado:', response.data.hash);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"invitado@ejemplo.com\",\n  \"permiso\": \"lectura-escritura\",\n  \"mensaje\": \"Te invito a colaborar en mi lista de la compra semanal\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invitations/{{listId}}/share",
              "host": ["{{baseUrl}}"],
              "path": ["invitations", "{{listId}}", "share"]
            },
            "description": "Crea una invitación para compartir una lista con otro usuario."
          },
          "response": []
        },
        {
          "name": "Acceder a Lista Compartida",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/invitations/access/{{invitationHash}}",
              "host": ["{{baseUrl}}"],
              "path": ["invitations", "access", "{{invitationHash}}"]
            },
            "description": "Accede a una lista compartida usando el hash de invitación. No requiere autenticación."
          },
          "response": []
        },
        {
          "name": "Obtener Invitaciones de Lista",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/invitations/{{listId}}",
              "host": ["{{baseUrl}}"],
              "path": ["invitations", "{{listId}}"]
            },
            "description": "Obtiene todas las invitaciones activas de una lista. Solo el propietario puede hacerlo."
          },
          "response": []
        },
        {
          "name": "Actualizar Permisos de Invitación",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"permiso\": \"solo-lectura\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/invitations/{{listId}}/permissions/{{invitationHash}}",
              "host": ["{{baseUrl}}"],
              "path": ["invitations", "{{listId}}", "permissions", "{{invitationHash}}"]
            },
            "description": "Actualiza los permisos de una invitación existente."
          },
          "response": []
        },
        {
          "name": "Cancelar Invitación",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/invitations/{{listId}}/{{invitationHash}}",
              "host": ["{{baseUrl}}"],
              "path": ["invitations", "{{listId}}", "{{invitationHash}}"]
            },
            "description": "Cancela una invitación activa, revocando el acceso inmediatamente."
          },
          "response": []
        }
      ]
    },
    {
      "name": "07. Desarrollo y Testing",
      "item": [
        {
          "name": "Info Sistema de Eventos",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/dev/events",
              "host": ["{{baseUrl}}"],
              "path": ["dev", "events"]
            },
            "description": "Obtiene información sobre el estado del sistema de eventos RabbitMQ. Solo disponible en development."
          },
          "response": []
        },
        {
          "name": "Reset Sistema de Eventos",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/dev/events",
              "host": ["{{baseUrl}}"],
              "path": ["dev", "events"]
            },
            "description": "Reinicia el sistema de eventos para testing. Solo disponible en development."
          },
          "response": []
        },
        {
          "name": "Publicar Evento de Prueba",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tipo\": \"TEST_EVENT\",\n  \"datos\": {\n    \"mensaje\": \"Evento de prueba desde Postman\",\n    \"timestamp\": \"2025-10-28T12:00:00Z\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/dev/events/test",
              "host": ["{{baseUrl}}"],
              "path": ["dev", "events", "test"]
            },
            "description": "Publica un evento de prueba para verificar el sistema de mensajería."
          },
          "response": []
        }
      ]
    },
    {
      "name": "08. Inteligencia Artificial",
      "item": [
        {
          "name": "Obtener Ocasiones Disponibles",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/occasion-lists/occasions",
              "host": ["{{baseUrl}}"],
              "path": ["occasion-lists", "occasions"]
            },
            "description": "Obtiene la lista de 20 ocasiones predefinidas disponibles para generar listas inteligentes (barbacoa, cena romántica, etc.)."
          },
          "response": []
        },
        {
          "name": "Generar Lista por Ocasión",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.data && jsonData.data.list && jsonData.data.list.id) {",
                  "        pm.environment.set('listId', jsonData.data.list.id);",
                  "        console.log('ListId guardado:', jsonData.data.list.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"occasion\": \"Barbacoa\",\n  \"numberOfPeople\": 8,\n  \"budget\": 150,\n  \"dietaryRestrictions\": [\"Sin gluten\"],\n  \"storeId\": \"{{storeId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/occasion-lists/generate",
              "host": ["{{baseUrl}}"],
              "path": ["occasion-lists", "generate"]
            },
            "description": "Genera automáticamente una lista completa de productos usando IA basándose en una ocasión específica. Requiere: occasion (una de las 20 disponibles), numberOfPeople (1-50), budget (1-10000€). Opcional: dietaryRestrictions (máx 10), storeId."
          },
          "response": []
        },
        {
          "name": "Preview Lista por Ocasión",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"occasion\": \"Cena romántica\",\n  \"numberOfPeople\": 2,\n  \"budget\": 80\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/occasion-lists/preview",
              "host": ["{{baseUrl}}"],
              "path": ["occasion-lists", "preview"]
            },
            "description": "Genera un preview de lista por ocasión SIN guardarla en la base de datos. Útil para ver qué productos sugeriría la IA antes de crear la lista real. Mismos parámetros que 'Generar Lista por Ocasión'."
          },
          "response": []
        },
        {
          "name": "Categorización Masiva (CU-29)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200 || pm.response.code === 207) {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.success && jsonData.data.batchStats) {",
                  "        console.log('Categorización exitosa:');",
                  "        console.log('- Total productos:', jsonData.data.batchStats.totalProducts);",
                  "        console.log('- Exitosos:', jsonData.data.batchStats.successful);",
                  "        console.log('- Fallidos:', jsonData.data.batchStats.failed);",
                  "        console.log('- Desde cache:', jsonData.data.batchStats.fromCache);",
                  "        console.log('- Desde IA:', jsonData.data.batchStats.fromAI);",
                  "        console.log('- Confianza promedio:', jsonData.data.batchStats.averageConfidence);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"products\": [\n    {\n      \"nombre\": \"Leche entera Pascual 1L\",\n      \"descripcion\": \"Leche pasteurizada botella 1 litro\"\n    },\n    {\n      \"nombre\": \"Pan integral\"\n    },\n    {\n      \"nombre\": \"Coca Cola 2L\"\n    },\n    {\n      \"nombre\": \"Pechuga de pollo\",\n      \"descripcion\": \"Pollo fresco de granja\"\n    },\n    {\n      \"nombre\": \"Tomates cherry\"\n    }\n  ],\n  \"tiendaId\": \"{{storeId}}\",\n  \"enrichWithExistingCategories\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/ai/bulk-categorize",
              "host": ["{{baseUrl}}"],
              "path": ["ai", "bulk-categorize"]
            },
            "description": "🆕 CU-29: Categoriza automáticamente hasta 50 productos en un solo request usando IA (Perplexity Llama 3.1 Sonar). Características:\n\n- 📦 **Batching inteligente**: División automática en sub-lotes de 20 productos\n- 💾 **Cache Redis**: TTL 24h para reducir costos\n- 📊 **Enriquecimiento BD**: Usa categorías existentes de la tienda\n- 🛡️ **Validación 3 niveles**: DTO Zod + Use Case + Service\n- 📈 **Estadísticas completas**: Confidence, sources, timing\n- ⚠️ **Fallos parciales**: Código 207 si algunos productos fallan\n- 🔐 **Rate Limiting**: 5 requests/hora por usuario\n\n**Parámetros:**\n- `products` (array 1-50): Lista de productos con nombre (requerido) y descripción (opcional)\n- `tiendaId` (UUID opcional): Para enriquecer con categorías de esa tienda\n- `enrichWithExistingCategories` (boolean, default true): Si usar categorías de BD\n\n**Respuestas:**\n- `200 OK`: Todos los productos categorizados exitosamente\n- `207 Multi-Status`: Algunos productos fallaron (ver batchStats.failed)\n- `400 Bad Request`: Validación fallida (>50 productos, nombres inválidos, etc.)\n- `429 Too Many Requests`: Rate limit excedido (5 req/hora)\n\n**Ejemplo de respuesta:**\n```json\n{\n  \"success\": true,\n  \"data\": {\n    \"categorizedProducts\": [\n      {\n        \"nombre\": \"Leche entera Pascual 1L\",\n        \"suggestedCategory\": {\n          \"nombre\": \"Lácteos\",\n          \"tiendaId\": \"uuid\",\n          \"confidence\": 95\n        },\n        \"alternativeCategories\": [{\"nombre\": \"Bebidas\", \"confidence\": 60}],\n        \"source\": \"ai\",\n        \"processingTimeMs\": 1250\n      }\n    ],\n    \"batchStats\": {\n      \"totalProducts\": 5,\n      \"successful\": 5,\n      \"failed\": 0,\n      \"fromCache\": 2,\n      \"fromAI\": 3,\n      \"averageConfidence\": 88.5,\n      \"totalProcessingTimeMs\": 3200,\n      \"estimatedTokens\": 450\n    }\n  }\n}\n```"
          },
          "response": []
        }
      ]
    },
    {
      "name": "09. Dashboard de Monitoreo",
      "item": [
        {
          "name": "Métricas del Sistema",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/dashboard/metrics",
              "host": ["{{baseUrl}}"],
              "path": ["dashboard", "metrics"]
            },
            "description": "Obtiene métricas completas del sistema: endpoints, cache y sistema."
          },
          "response": []
        },
        {
          "name": "Estado de Salud",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/dashboard/health",
              "host": ["{{baseUrl}}"],
              "path": ["dashboard", "health"]
            },
            "description": "Obtiene el estado de salud de los servicios del sistema."
          },
          "response": []
        },
        {
          "name": "Alertas Activas",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/dashboard/alerts",
              "host": ["{{baseUrl}}"],
              "path": ["dashboard", "alerts"]
            },
            "description": "Obtiene alertas activas del sistema (error rate, response time, cache)."
          },
          "response": []
        },
        {
          "name": "Performance Detallado",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/dashboard/performance",
              "host": ["{{baseUrl}}"],
              "path": ["dashboard", "performance"]
            },
            "description": "Obtiene análisis detallado de performance: endpoints lentos y con errores."
          },
          "response": []
        }
      ]
    },
    {
      "name": "10. Recomendaciones IA",
      "item": [
        {
          "name": "Ejemplos de Contexto (Público)",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/recommendations/context-examples",
              "host": ["{{baseUrl}}"],
              "path": ["recommendations", "context-examples"]
            },
            "description": "📚 Endpoint público (sin autenticación) que devuelve ejemplos de contextos útiles para mejorar recomendaciones: 'Cena romántica', 'Barbacoa familiar', 'Desayuno fitness', etc. con tips de uso."
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code es 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Respuesta tiene ejemplos', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "    pm.expect(jsonData.data.examples).to.be.an('array');",
                  "    pm.expect(jsonData.data.examples.length).to.be.above(0);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Recomendaciones Generales",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/recommendations/{{listId}}?creativityLevel=balanced&maxRecommendations=10&excludeExisting=true",
              "host": ["{{baseUrl}}"],
              "path": ["recommendations", "{{listId}}"],
              "query": [
                {
                  "key": "creativityLevel",
                  "value": "balanced",
                  "description": "Conservative (seguro) | Balanced (equilibrado) | Creative (innovador)"
                },
                {
                  "key": "maxRecommendations",
                  "value": "10",
                  "description": "Cantidad de sugerencias (5-50)"
                },
                {
                  "key": "excludeExisting",
                  "value": "true",
                  "description": "Excluir productos ya en lista"
                },
                {
                  "key": "context",
                  "value": "",
                  "description": "Contexto opcional: 'Cena italiana', 'Desayuno fitness'",
                  "disabled": true
                },
                {
                  "key": "categoryId",
                  "value": "",
                  "description": "Filtrar por categoría específica",
                  "disabled": true
                },
                {
                  "key": "includeUserHistory",
                  "value": "true",
                  "description": "Incluir historial de usuario",
                  "disabled": true
                }
              ]
            },
            "description": "🎯 Obtiene recomendaciones generales de productos complementarios para una lista completa. La IA analiza todos los productos actuales y sugiere items que complementan bien.\n\n**Niveles de creatividad:**\n- Conservative: Solo muy relacionados\n- Balanced: Mix equilibrado (recomendado)\n- Creative: Sugerencias innovadoras"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code es 200 o 400 (lista vacía)', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 403, 404]);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    pm.test('Respuesta tiene recomendaciones', function () {",
                  "        const jsonData = pm.response.json();",
                  "        pm.expect(jsonData.success).to.eql(true);",
                  "        pm.expect(jsonData.data).to.have.property('recommendations');",
                  "        pm.expect(jsonData.data).to.have.property('detectedContext');",
                  "        pm.expect(jsonData.data.metadata).to.have.property('averageConfidence');",
                  "    });",
                  "",
                  "    pm.test('Recomendaciones tienen estructura correcta', function () {",
                  "        const jsonData = pm.response.json();",
                  "        if (jsonData.data.recommendations.length > 0) {",
                  "            const rec = jsonData.data.recommendations[0];",
                  "            pm.expect(rec).to.have.property('name');",
                  "            pm.expect(rec).to.have.property('reason');",
                  "            pm.expect(rec).to.have.property('confidenceScore');",
                  "            pm.expect(rec).to.have.property('recommendationType');",
                  "        }",
                  "    });",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Recomendaciones Específicas por Producto",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/recommendations/{{listId}}/for-product/{{productId}}?creativityLevel=balanced&maxRecommendations=8",
              "host": ["{{baseUrl}}"],
              "path": ["recommendations", "{{listId}}", "for-product", "{{productId}}"],
              "query": [
                {
                  "key": "creativityLevel",
                  "value": "balanced"
                },
                {
                  "key": "maxRecommendations",
                  "value": "8"
                },
                {
                  "key": "context",
                  "value": "",
                  "description": "Contexto opcional para afinar sugerencias",
                  "disabled": true
                }
              ]
            },
            "description": "🔍 Obtiene recomendaciones enfocadas en un producto específico de la lista. Por ejemplo, si seleccionas 'Pasta', sugerirá 'Salsa de tomate', 'Queso parmesano', 'Albahaca', etc.\n\n**Casos de uso:**\n- Complementar un producto que acabas de añadir\n- Ver qué va bien con un ingrediente específico\n- Descubrir combinaciones que no conocías"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code válido', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 403, 404]);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    pm.test('Recomendaciones relacionadas con producto', function () {",
                  "        const jsonData = pm.response.json();",
                  "        pm.expect(jsonData.data.recommendations).to.be.an('array');",
                  "        // Las recomendaciones deberían incluir relatedProducts",
                  "        if (jsonData.data.recommendations.length > 0) {",
                  "            const rec = jsonData.data.recommendations[0];",
                  "            pm.expect(rec).to.have.property('relatedProducts');",
                  "        }",
                  "    });",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Recomendaciones con Contexto Específico",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/recommendations/{{listId}}?context=Cena italiana&creativityLevel=creative&maxRecommendations=12",
              "host": ["{{baseUrl}}"],
              "path": ["recommendations", "{{listId}}"],
              "query": [
                {
                  "key": "context",
                  "value": "Cena italiana",
                  "description": "Contexto para afinar recomendaciones"
                },
                {
                  "key": "creativityLevel",
                  "value": "creative"
                },
                {
                  "key": "maxRecommendations",
                  "value": "12"
                }
              ]
            },
            "description": "🎨 Ejemplo de recomendaciones con contexto específico. El contexto ayuda a la IA a entender mejor la ocasión y sugerir productos más apropiados.\n\n**Ejemplos de contextos:**\n- 'Cena italiana' → Sugerirá vino, pan, postre italiano\n- 'Desayuno fitness' → Frutas, yogurt, avena\n- 'Barbacoa familiar' → Carbón, salsas, bebidas\n- 'Cena romántica' → Velas, vino premium, postre"
          },
          "response": []
        },
        {
          "name": "Recomendaciones por Categoría",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/recommendations/{{listId}}?categoryId={{categoryId}}&maxRecommendations=15",
              "host": ["{{baseUrl}}"],
              "path": ["recommendations", "{{listId}}"],
              "query": [
                {
                  "key": "categoryId",
                  "value": "{{categoryId}}",
                  "description": "Filtrar solo esta categoría"
                },
                {
                  "key": "maxRecommendations",
                  "value": "15"
                }
              ]
            },
            "description": "🗂️ Filtra recomendaciones para obtener solo productos de una categoría específica. Útil cuando quieres completar una sección particular de tu lista.\n\n**Ejemplo:**\nSi tienes productos de 'Verduras' y filtras por categoryId de 'Verduras', obtendrás más sugerencias de vegetales que complementen los que ya tienes."
          },
          "response": []
        }
      ]
    },
    {
      "name": "11. 🛡️ Admin & Security",
      "item": [
        {
          "name": "Security Test - Vulnerability Scan",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/security/test",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "security", "test"]
            },
            "description": "🔍 **Endpoint de Testing de Seguridad Automático**\n\n**Ejecuta una suite completa de tests de vulnerabilidades:**\n- ✅ XSS Pattern Detection (6 vectores)\n- ✅ SQL Injection Detection (7 vectores)\n- ✅ Rate Limiting Validation\n- ✅ Security Headers Verification\n- ✅ HTTPS/SSL Configuration Check\n- ✅ Authentication Security Audit\n- ✅ Database Security Review\n\n**Response incluye:**\n- 📊 Security Score (0-100)\n- 📈 Total tests ejecutados\n- ❌ Tests fallidos con recomendaciones\n- 📋 Reporte detallado por severidad\n\n**⚠️ SOLO ADMINISTRADORES**\nRequiere rol 'admin' para acceder."
          },
          "response": []
        }
      ]
    }
  ]
}